%% Курс Интеллектуальные системы (сентябрь 2020 - январь 2021)
%
%  Инструкции
%  ------------
% 
%  Этот файл содержит код, который позволит выполнить Лабораторную работу,
%  касающуюся логистической регрессии. Следует запрограммировать следующие
%  функции
%
%     sigmoid.m
%     costFunction.m
%     predict.m
%     costFunctionReg.m
%
%  Для выполнения задания нет необходимости изменять какую либо часть кода,
%  которая имеется в данном файле или в иных файлах, которые не указаны в
%  задании.
%

%% Инициализация
clear ; close all; clc

%% Загрузка данных
%  Первые две столбца содержат оценочные данные, а ттретий столбец содержит
%  метку класса

data = load('ex2data1.txt');
X = data(:, [1, 2]); y = data(:, 3);

%% ==================== Часть 1. Отображение ============
%  Вначале отображаются данные, чтобы представить себе задачу в целом 

fprintf(['Отображение данных с "+", соответствующих примерам (y = 1), и "o", ' ...
         'соответствующих примерам (y = 0).\n']);

plotData(X, y);

fprintf('Пауза в выполнении программы. Нажмите любую клавишу для продолжения.\n');
pause;


%% ===== Задание 2: Вычисление функции стоимости и градиентов =============
%  В этой части задания, определяются функция стоимости и градиенты для задачи
%  логистической регрессии. Следует завершить код функции 
%  costFunction.m

%  Задание исходной матрицы
[m, n] = size(X);

X = [ones(m, 1) X];

initial_theta = zeros(n + 1, 1);

[cost, grad] = costFunction(initial_theta, X, y);

fprintf('Значение функции стоимости при начальных (нулевых) значениях вектора thetа: %f\n', cost);
fprintf('Значение градиента при начальных (нулевых) значениях вектора thetа: \n');
fprintf(' %f \n', grad);

fprintf('Пауза в выполнении программы. Нажмите любую клавишу для продолжения.\n');
pause;


%% == Задание 3: Оптимизация с использованием функции fminunc (fmincg)  ===
%  В этом задании предполагается вместо уже известного метода градиентного 
%  спуска использовать для вычисления оптимальных значений параметров theta 
%  использовать встроенную функцию fminunc
%  Указание: В последних версиях пакета MATLABданная функция перенесена в
%  Optimization toolbox. Если использование этой функции оказывается
%  затруднительным в компьютерном классе, рекомендуется использовать фукцию
%  fmincg, которая реализует метод сопряженных градиентов.
%  Код программы fmincg находится в рабочем каталоге.

%  Задание опций для fminunc (fmincg)
options = optimset('GradObj', 'on', 'MaxIter', 400);

%  Выполнение программы fminunc (fmincg) для вычисления оптимальных
%  значений theta
%  Функция возвращает значение функции стоимости и theta 

%  Указание: Выбрать наиболее приемлемый вариант
% initial_theta = initial_theta - 0.1;
[theta, cost] = ...
	fminunc(@(t)(costFunction(t, X, y)), initial_theta, options);
%[theta, cost] = ...
%	fmincg(@(t)(costFunction(t, X, y)), initial_theta, options);

% Вывод theta на экран
fprintf('Значение J, найденное fmincg: %f\n', cost);
fprintf('Значение theta: \n');
fprintf(' %f \n', theta);

% Отображение границы классов
plotDecisionBoundary(theta, X, y);


hold on;
% Названия осей
xlabel('Шум')
ylabel('Неравномерность вращения')

% "Легенда"
legend('Поломка', 'Исправен')
hold off;

fprintf('Пауза в выполнении программы. Нажмите любую клавишу для продолжения.\n');
pause;

%% ============== Задание 4: Предсказание и оценка точности ==============
%  После выполнения обучения следует обеспечить предсказание для тех
%  данных, которые не были использованы в процессе обучения, т.е. данных,
%  которые возникают в процессе эксплуатации автомобиля. 
%  В этом задании, логистическая регрессия используется для предсказания
%  вероятности того, что двигатель, состояние которого характеризуется
%  следующими параметрами, шум - 45 ед., вибрация - 85 ед, является
%  исправным.
%
%  Более того, Вам предстоит вычислить точность (погрешность)
%  используемой логистической модели.
%
%  Задача состоит в завершении кода predict.m

%  Определение вероятности работоспособности или отказа двигателя, 
%  состояние которого характеризуется следующими параметрами, шум - 45 ед., 
%  вибрация - 85 ед.

prob = sigmoid([1 45 85] * theta);
fprintf(['Для двигателя с уровнем шума 45 и вибрацией 85, предсказывается поломка ' ...
         'с вероятностью %f\n\n'], prob);

% Определяется точность тренировочного набора данных
p = predict(theta, X);

fprintf('Точность обучения: %f\n', mean(double(p == y)) * 100);

fprintf('Пауза в выполнении программы. Нажмите любую клавишу для продолжения.\n');
pause;

